#include<bits/stdc++.h>
#define bst           ios_base::sync_with_stdio(0);
#define bug(x)        cerr<<#x<<'='<<x<<endl;
#define lp(i,a,b)     for(int i=a; i<=b; i++)
#define ll            long long int
#define eb            emplace_back
#define pb            push_back
#define mp            make_pair
using namespace std;
bool check[3005]={};
vector<ll> digit[3005], divisors[3005];
ll dfs(ll n){
    if(check[n]==true){
        return 0;
    }
    check[n]=true;
    ll limit = divisors[n].size();
    ll keep=0;
    for(ll i=0; i<limit ; i++){
        ll x=divisors[n][i];
        while(x){
            keep+=x%10;
            x/=10;
        }
    }
    digit[n].eb(n);
    if(keep==n) return 0;
    
    ll m=dfs(keep);
    limit=digit[keep].size();
    for(ll i=0; i<limit; i++) digit[n].eb(digit[keep][i]);
    return 0;
}
int main(){
    ll n, m, i, j, k, l;
    for(i=1; i<=3000; i++){
        for(j=i; j<=3000; j+=i) divisors[j].eb(i);
    }
    for(i=0; i<=3000; i++){
        if(check[i]==false){
            ll keep=dfs(i);
        }
    }
    ll tc=1;
    while(cin>>m>>n){
        ll x, keep=-1;
        ll start=min(m,n), last=max(m,n);
        for(i=start; i<=last; i++){
            ll y=digit[i].size();
            if(y>keep) x=i, keep=y;
        }
        printf("Input%lld: %lld %lld\n", tc, m, n);
        printf("Output%lld:", tc++);
        for(i=0; i<keep; i++) printf(" %lld", digit[x][i]);
        cout<<endl;
    }
    
    
    return 0;
}
